diff -rupN a/interpreter/llvm/src/cmake/config-ix.cmake b/interpreter/llvm/src/cmake/config-ix.cmake
--- a/interpreter/llvm/src/cmake/config-ix.cmake	2015-06-02 17:02:58.000000000 +0900
+++ b/interpreter/llvm/src/cmake/config-ix.cmake	2015-06-09 18:42:04.000000000 +0900
@@ -332,10 +332,12 @@ endif()
 
 # By default, we target the host, but this can be overridden at CMake
 # invocation time.
-include(GetHostTriple)
-get_host_triple(LLVM_INFERRED_HOST_TRIPLE)
+# include(GetHostTriple)
+# get_host_triple(LLVM_INFERRED_HOST_TRIPLE)
 
-set(LLVM_HOST_TRIPLE "${LLVM_INFERRED_HOST_TRIPLE}" CACHE STRING
+# set(LLVM_HOST_TRIPLE "${LLVM_INFERRED_HOST_TRIPLE}" CACHE STRING
+#     "Host on which LLVM binaries will run")
+set(LLVM_HOST_TRIPLE "x86_64-apple-darwin11.4.2" CACHE STRING
     "Host on which LLVM binaries will run")
 
 # Determine the native architecture.
diff -rupN a/interpreter/llvm/src/lib/Support/Unix/Host.inc b/interpreter/llvm/src/lib/Support/Unix/Host.inc
--- a/interpreter/llvm/src/lib/Support/Unix/Host.inc	2015-06-02 17:02:58.000000000 +0900
+++ b/interpreter/llvm/src/lib/Support/Unix/Host.inc	2015-06-09 18:43:05.000000000 +0900
@@ -28,10 +28,11 @@ using namespace llvm;
 static std::string getOSVersion() {
   struct utsname info;
 
-  if (uname(&info))
-    return "";
+  // if (uname(&info))
+  //   return "";
+  return "11.4.2";
 
-  return info.release;
+  // return info.release;
 }
 
 std::string sys::getDefaultTargetTriple() {
