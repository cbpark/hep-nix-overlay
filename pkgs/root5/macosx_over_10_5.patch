diff -rupN a/cmake/modules/SetUpMacOS.cmake b/cmake/modules/SetUpMacOS.cmake
--- a/cmake/modules/SetUpMacOS.cmake	2015-01-12 15:26:28.000000000 +0100
+++ b/cmake/modules/SetUpMacOS.cmake	2015-01-30 16:57:50.000000000 +0100
@@ -12,11 +12,11 @@ set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PAT
 #---------------------------------------------------------------------------------------------------------
 
 if (CMAKE_SYSTEM_NAME MATCHES Darwin)
-  EXECUTE_PROCESS(COMMAND sw_vers "-productVersion"
+  EXECUTE_PROCESS(COMMAND ${CMAKE_SW_VERS} "-productVersion"
                   COMMAND cut -d . -f 1-2
                   OUTPUT_VARIABLE MACOSX_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
   MESSAGE(STATUS "Found a Mac OS X System ${MACOSX_VERSION}")
-  EXECUTE_PROCESS(COMMAND sw_vers "-productVersion"
+  EXECUTE_PROCESS(COMMAND ${CMAKE_SW_VERS} "-productVersion"
                   COMMAND cut -d . -f 2
                   OUTPUT_VARIABLE MACOSX_MINOR OUTPUT_STRIP_TRAILING_WHITESPACE)
 
@@ -29,7 +29,7 @@ if (CMAKE_SYSTEM_NAME MATCHES Darwin)
     #TODO: check Thread, define link command
     #TODO: more stuff check configure script
     execute_process(COMMAND /usr/sbin/sysctl machdep.cpu.extfeatures OUTPUT_VARIABLE SYSCTL_OUTPUT)
-    if(${SYSCTL_OUTPUT} MATCHES 64)
+#    if(${SYSCTL_OUTPUT} MATCHES 64)
        MESSAGE(STATUS "Found a 64bit system")
        set(ROOT_ARCHITECTURE macosx64)
        SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS}")
@@ -38,12 +38,12 @@ if (CMAKE_SYSTEM_NAME MATCHES Darwin)
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m64")
        SET(CMAKE_FORTRAN_FLAGS "${CMAKE_FORTRAN_FLAGS} -m64")
-    else(${SYSCTL_OUTPUT} MATCHES 64)
-       MESSAGE(STATUS "Found a 32bit system")
-       SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")
-       SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m32")
-       SET(CMAKE_FORTRAN_FLAGS "${CMAKE_FORTRAN_FLAGS} -m32")
-    endif(${SYSCTL_OUTPUT} MATCHES 64)
+#    else(${SYSCTL_OUTPUT} MATCHES 64)
+#       MESSAGE(STATUS "Found a 32bit system")
+#       SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")
+#       SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m32")
+#       SET(CMAKE_FORTRAN_FLAGS "${CMAKE_FORTRAN_FLAGS} -m32")
+#    endif(${SYSCTL_OUTPUT} MATCHES 64)
   endif()
 
   if(MACOSX_VERSION VERSION_GREATER 10.6)
