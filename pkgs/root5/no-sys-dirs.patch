diff -rupN a/cmake/modules/RootNewMacros.cmake b/cmake/modules/RootNewMacros.cmake
--- a/cmake/modules/RootNewMacros.cmake	2014-03-14 16:21:52.000000000 +0100
+++ b/cmake/modules/RootNewMacros.cmake	2015-01-30 13:13:53.000000000 +0100
@@ -53,7 +53,7 @@ if(APPLE)
          BUILD_WITH_INSTALL_RPATH ON)
   else()
     set(ROOT_LIBRARY_PROPERTIES ${ROOT_LIBRARY_PROPERTIES}
-         INSTALL_NAME_DIR "@rpath"
+         INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
          BUILD_WITH_INSTALL_RPATH ON)
   endif()
 endif()
diff -rupN a/cmake/modules/SetUpMacOS.cmake b/cmake/modules/SetUpMacOS.cmake
--- a/cmake/modules/SetUpMacOS.cmake	2014-03-14 16:21:52.000000000 +0100
+++ b/cmake/modules/SetUpMacOS.cmake	2015-01-30 13:15:14.000000000 +0100
@@ -8,7 +8,7 @@ set(CILIBS "-lm ${EXTRA_LDFLAGS} ${FINK_
 set(CMAKE_M_LIBS -lm)
 
 #---This is needed to help CMake to locate the X11 headers in the correct place and not under /usr/include
-set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} /usr/X11R6)
+set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} )
 #---------------------------------------------------------------------------------------------------------
 
 if (CMAKE_SYSTEM_NAME MATCHES Darwin)
@@ -24,27 +24,27 @@ if (CMAKE_SYSTEM_NAME MATCHES Darwin)
     set(libcxx ON CACHE BOOL "Build using libc++" FORCE)
   endif()
 
-  if(${MACOSX_MINOR} GREATER 4)
+#  if(${MACOSX_MINOR} GREATER 4)
     #TODO: check haveconfig and rpath -> set rpath true
     #TODO: check Thread, define link command
     #TODO: more stuff check configure script
-    execute_process(COMMAND /usr/sbin/sysctl machdep.cpu.extfeatures OUTPUT_VARIABLE SYSCTL_OUTPUT)
-    if(${SYSCTL_OUTPUT} MATCHES 64)
+#    execute_process(COMMAND /usr/sbin/sysctl machdep.cpu.extfeatures OUTPUT_VARIABLE SYSCTL_OUTPUT)
+#    if(${SYSCTL_OUTPUT} MATCHES 64)
        MESSAGE(STATUS "Found a 64bit system") 
        set(ROOT_ARCHITECTURE macosx64)
        SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS}")
-       SET(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS "${CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS} -m64")
-       SET(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS "${CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS} -m64")
-       SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
-       SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m64")
-       SET(CMAKE_FORTRAN_FLAGS "${CMAKE_FORTRAN_FLAGS} -m64")
-    else(${SYSCTL_OUTPUT} MATCHES 64)
-       MESSAGE(STATUS "Found a 32bit system") 
-       SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")
-       SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m32")
-       SET(CMAKE_FORTRAN_FLAGS "${CMAKE_FORTRAN_FLAGS} -m32")
-    endif(${SYSCTL_OUTPUT} MATCHES 64)
-  endif()
+       SET(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS "${CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS} -m64 ")
+       SET(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS "${CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS} -m64 ")
+       SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64 ")
+       SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m64 ")
+       SET(CMAKE_FORTRAN_FLAGS "${CMAKE_FORTRAN_FLAGS} -m64 ")
+#    else(${SYSCTL_OUTPUT} MATCHES 64)
+#       MESSAGE(STATUS "Found a 32bit system") 
+#       SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")
+#       SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m32")
+#       SET(CMAKE_FORTRAN_FLAGS "${CMAKE_FORTRAN_FLAGS} -m32")
+#    endif(${SYSCTL_OUTPUT} MATCHES 64)
+#  endif()
   
   if(MACOSX_VERSION VERSION_GREATER 10.6)
     set(MACOSX_SSL_DEPRECATED ON)
@@ -62,8 +62,8 @@ if (CMAKE_SYSTEM_NAME MATCHES Darwin)
      message(STATUS "Found GNU compiler collection")
      execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
 
-     SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common")
-     SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pipe -W -Wall -fsigned-char -fno-common")
+     SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -mstackrealign")
+     SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pipe -W -Wall -fsigned-char -fno-common -mstackrealign")
      SET(CMAKE_Fortran_FLAGS "${CMAKE_FORTRAN_FLAGS} -std=legacy")
      SET(CINT_CXX_DEFINITIONS "-DG__REGEXP -DG__UNIX -DG__SHAREDLIB -DG__ROOT -DG__REDIRECTIO -DG__OSFDLL -DG__STD_EXCEPTION")
      SET(CINT_C_DEFINITIONS "-DG__REGEXP -DG__UNIX -DG__SHAREDLIB -DG__ROOT -DG__REDIRECTIO -DG__OSFDLL -DG__STD_EXCEPTION")
@@ -75,14 +75,14 @@ if (CMAKE_SYSTEM_NAME MATCHES Darwin)
      set(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} -bind_at_load -m64")
 
      # Select flags.
-     set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g")
-     set(CMAKE_CXX_FLAGS_RELEASE        "-O2")
-     set(CMAKE_CXX_FLAGS_DEBUG          "-g -O2 -fno-reorder-blocks -fno-schedule-insns -fno-inline")
+     set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O0 -g")
+     set(CMAKE_CXX_FLAGS_RELEASE        "-O0")
+     set(CMAKE_CXX_FLAGS_DEBUG          "-g -O0 -fno-reorder-blocks -fno-schedule-insns -fno-inline")
      set(CMAKE_CXX_FLAGS_DEBUGFULL      "-g3 -fno-inline")
      set(CMAKE_CXX_FLAGS_PROFILE        "-g3 -fno-inline -ftest-coverage -fprofile-arcs")
-     set(CMAKE_C_FLAGS_RELWITHDEBINFO   "-O2 -g")
-     set(CMAKE_C_FLAGS_RELEASE          "-O2")
-     set(CMAKE_C_FLAGS_DEBUG            "-g -O2 -fno-reorder-blocks -fno-schedule-insns -fno-inline")
+     set(CMAKE_C_FLAGS_RELWITHDEBINFO   "-O0 -g")
+     set(CMAKE_C_FLAGS_RELEASE          "-O0")
+     set(CMAKE_C_FLAGS_DEBUG            "-g -O0 -fno-reorder-blocks -fno-schedule-insns -fno-inline")
      set(CMAKE_C_FLAGS_DEBUGFULL        "-g3 -fno-inline")
      set(CMAKE_C_FLAGS_PROFILE          "-g3 -fno-inline -ftest-coverage -fprofile-arcs")
    
@@ -110,13 +110,13 @@ if (CMAKE_SYSTEM_NAME MATCHES Darwin)
      set(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} -bind_at_load -m64")
 
      # Select flags.
-     set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g")
-     set(CMAKE_CXX_FLAGS_RELEASE        "-O2")
+     set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O0 -g")
+     set(CMAKE_CXX_FLAGS_RELEASE        "-O0")
      set(CMAKE_CXX_FLAGS_DEBUG          "-g  -fno-inline")
      set(CMAKE_CXX_FLAGS_DEBUGFULL      "-g3 -fno-inline")
      set(CMAKE_CXX_FLAGS_PROFILE        "-g3 -fno-inline -ftest-coverage -fprofile-arcs")
-     set(CMAKE_C_FLAGS_RELWITHDEBINFO   "-O2 -g")
-     set(CMAKE_C_FLAGS_RELEASE          "-O2")
+     set(CMAKE_C_FLAGS_RELWITHDEBINFO   "-O0 -g")
+     set(CMAKE_C_FLAGS_RELEASE          "-O0")
      set(CMAKE_C_FLAGS_DEBUG            "-g  -fno-inline")
      set(CMAKE_C_FLAGS_DEBUGFULL        "-g3 -fno-inline")
      set(CMAKE_C_FLAGS_PROFILE          "-g3 -fno-inline -ftest-coverage -fprofile-arcs")
@@ -131,7 +131,7 @@ if (CMAKE_SYSTEM_NAME MATCHES Darwin)
   endif()
   
   #---Set Linker flags----------------------------------------------------------------------
-  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,@loader_path/../lib")
+#  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,@loader_path/../lib")
 
   
 else (CMAKE_SYSTEM_NAME MATCHES Darwin)
